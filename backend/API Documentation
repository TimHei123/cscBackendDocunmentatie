# Self Service Portal - API Documentatie & Technische Overdracht

## üìã Inhoudsopgave
1. [Project Overzicht](#project-overzicht)
2. [Systeem Architectuur](#systeem-architectuur)
3. [Authenticatie](#authenticatie)
4. [API Endpoints](#api-endpoints)
5. [Foutafhandeling](#foutafhandeling)
6. [Ontwikkelomgeving](#ontwikkelomgeving)
7. [Deployment](#deployment)
8. [Bekende Problemen & Toekomstige Verbeteringen](#bekende-problemen)

## üéØ Project Overzicht
Het Self Service Portal is ontworpen om gebruikers de mogelijkheid te geven zelfstandig virtuele machines aan te vragen en te beheren via een gecentraliseerde interface. Dit document dient zowel als API-documentatie als technisch overdrachtsdocument voor het nieuwe ontwikkelteam.

### Kernfunctionaliteiten
- Zelfservice VM-provisioning
- Ondersteuning voor meerdere hypervisors
- Rol-gebaseerde toegangscontrole
- Geautomatiseerd resourcebeheer

### Technische Stack
- Backend Framework: [Framework specificeren]
- Database: [Database specificeren]
- Authenticatie: JWT-gebaseerd
- Hypervisor Integratie: [Ondersteunde hypervisors]

## üèó Systeem Architectuur
[Voeg hier een korte beschrijving toe van de systeemarchitectuur, componenten en hun interacties]

### Dataflow
1. Gebruikersauthenticatie
2. Resource Aanvraag
3. Hypervisor Communicatie
4. Resource Provisioning

## üîê Authenticatie
Alle API-endpoints (behalve de health check) vereisen authenticatie middels JWT tokens.

### Authenticatie Endpoints

#### 1. Inloggen
- **Endpoint:** `POST /auth/login`
- **Beschrijving:** Authenticeert gebruiker en start een sessie
- **Request Body:**
```json
{
    "username": "jan_jansen",
    "password": "geheimwachtwoord"
}
```
- **Response:**
```json
{
    "token": "abc123xyz456",
    "user": {
        "name": "Jan Jansen",
        "is_admin": true
    }
}
```
- **Foutcodes:**
  - 401: Ongeldige inloggegevens
  - 429: Te veel inlogpogingen

#### 2. Wachtwoordreset Aanvragen
- **Endpoint:** `POST /auth/resetRequest`
- **Beschrijving:** Start wachtwoordreset procedure
- **Request Body:**
```json
{
    "email": "jan.jansen@voorbeeld.nl"
}
```
- **Response:**
```json
{
    "message": "Reset aanvraag verstuurd"
}
```

#### 3. Wachtwoord Resetten
- **Endpoint:** `POST /auth/resetPassword`
- **Beschrijving:** Voltooit wachtwoordreset
- **Request Body:**
```json
{
    "token": "resetToken123",
    "newPassword": "nieuwGeheimWachtwoord123"
}
```

## üíª VM Beheer API

### Verplichte Headers voor Alle VM Operaties
```
Authorization: Bearer <jwt_token>
User_SID: <gebruiker_identifier>
Content-Type: application/json
```

### Endpoints

#### 1. Alle VMs Weergeven (Alleen Admin)
- **Endpoint:** `GET /api/{hypervisor}/listallvms`
- **Toegang:** Alleen admin gebruikers
- **Snelheidslimiet:** 100 verzoeken/minuut
- **Response:**
```json
{
    "vms": [
        {
            "id": 1,
            "name": "Server1",
            "status": "actief",
            "eigenaar": "gebruiker123",
            "resources": {
                "cpu": 4,
                "geheugen": 8192,
                "schijf": 50
            },
            "aangemaakt_op": "2024-01-01T00:00:00Z"
        }
    ]
}
```

#### 2. Eigen VMs Weergeven
- **Endpoint:** `GET /api/{hypervisor}/listvmsuser`
- **Toegang:** Alle geauthenticeerde gebruikers
- **Response Schema:** Gelijk aan Alle VMs Weergeven

#### 3. VM Aanmaken
- **Endpoint:** `POST /api/{hypervisor}/create-server`
- **Request Validatie:**
  - CPU: 1-16 cores
  - Geheugen: 1024-32768 MB
  - Schijfruimte: 10-500 GB
- **Request Body:**
```json
{
    "template_id": "template-101",
    "cpu": 4,
    "geheugen": 8192,
    "schijf": 50,
    "naam": "project-server",
    "beschrijving": "Ontwikkelomgeving",
    "verloop_dagen": 90
}
```

#### 4. VM Verwijderen
- **Endpoint:** `POST /api/{hypervisor}/delete-server/{vm_id}`
- **Beveiliging:** Valideert eigenaarschap voor verwijdering
- **Cascade:** Verwijdert alle gekoppelde resources

## ‚ö†Ô∏è Foutafhandeling
Standaard foutresponse formaat:
```json
{
    "fout": {
        "code": "FOUT_CODE",
        "bericht": "Leesbaar foutbericht",
        "details": {}
    }
}
```

Veel voorkomende foutcodes:
- `AUTH_001`: Authenticatie mislukt
- `VM_001`: VM aanmaken mislukt
- `RESOURCE_001`: Resourcelimiet overschreden
- `HYPERVISOR_001`: Hypervisor communicatiefout

## üõ† Ontwikkelomgeving
1. Repository klonen
2. Dependencies installeren: `[commando]`
3. Omgevingsvariabelen configureren (zie .env.example)
4. Ontwikkelserver starten: `[commando]`

### Omgevingsvariabelen
```
DB_CONNECTION=
JWT_SECRET=
HYPERVISOR_ENDPOINTS=
```

## üì¶ Deployment
Huidige deployment proces:
1. [Deployment stappen specificeren]
2. [Monitoring setup toevoegen]
3. [Backup procedures]

### Productie Overwegingen
- Rate limiting configuratie
- Beveiligingsmaatregelen
- Backup strategie
- Monitoring setup

## üêõ Bekende Problemen & Toekomstige Verbeteringen
1. [Lijst bekende problemen]
2. [Geplande verbeteringen]
3. [Technical debt items]

## üìû Support Contacten
Voor aanvullende ondersteuning of vragen:
- Primair Contact: [Naam/Email]
- Systeembeheerder: [Naam/Email]
- Documentatie Beheerder: [Naam/Email]

## üìö Aanvullende Bronnen
- [Link naar interne documentatie]
- [Link naar monitoring dashboard]
- [Link naar issue tracker]

---
Laatst Bijgewerkt: [Datum]
Versie: [Versienummer]