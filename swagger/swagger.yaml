openapi: 3.0.3
info:
  title: CSC Self-Service Backend API
  version: 1.0.0
  description: |
    # CSC Self-Service Backend API

    Deze backend API ondersteunt selfservice voor studenten om virtuele machines aan te maken, beheren en verwijderen, evenals het bijwerken van gebruikersprofielen.

    ## Authenticatie
    Alle routes onder `/api/` vereisen authenticatie via een **Bearer-token** in de `Authorization` header. Verkrijg dit token via de `/auth/login` endpoint. Het formaat van de header moet zijn:
    
    ```
    Authorization: Bearer <JWT-token>
    ```
    De JWT-token heb je nodig zodat geen gebruiker zonder inloggegevens toegang heeft tot de API. De JWT is eigenlijk te vergelijken met een user session. Zo wet de API dat je op die route mag komen.


    ## Productomschrijving
    Deze API is ontwikkeld voor HBO-ICT studenten die zelfstandig virtuele machines willen beheren via bijvoorbeeld Proxmox of VMware. Het doel is om DevOps-principes te leren zonder afhankelijk te zijn van systeembeheerders.

    ## Doelgroep
    HBO-ICT studenten, met name in de afstudeerrichting Infrastructure of Software & Infrastructure.

    ## HBO-i Eindkwalificaties
    - **Realiseren**: Ontwikkelen van API-functionaliteit om infrastructuur te beheren.
    - **Beheren**: Beheren van virtuele omgevingen.
    - **Adviseren**: Deze API stelt studenten in staat een infrastructuurontwerp te onderbouwen met werkende oplossingen.

     ## Contact
    <div class="contact-info">
      <p>Voor ondersteuning of vragen:</p>
      <ul>
        <li>Email: <a href="mailto:timon@timonheidenreich.eu">Stuur een Email</a></li>
        <br><br>
        <li>Discord: <a href="https://discord.com/users/760123997475700756" target="_blank">Stuur een Bericht (Ik heb meldingen uitgeschakeld voor Discord)</a></li>
        <br><br>
        <li>Berichten: <a href="sms://timon@timonheidenreich.eu">Stuur een Bericht (alleen voor iOS gebruikers)</a></li>
      </ul>
    </div>
  contact:
    name: CSC Support Team

servers:
  - url: https://api.dev.ikwileenserver.open-ict.hu
    description: dev server

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Error:
      type: object
      properties:
        error:
          type: string
          description: Error message

    LoginRequest:
      type: object
      required: [username, password]
      properties:
        username:
          type: string
        password:
          type: string

    ResetRequest:
      type: object
      required: [email]
      properties:
        email:
          type: string

    ResetPasswordRequest:
      type: object
      required: [token, newPassword]
      properties:
        token:
          type: string
        newPassword:
          type: string

    UserInfo:
      type: object
      properties:
        email:
          type: string
        student_id:
          type: integer
        home_ip:
          type: string

    CreateServerRequest:
      type: object
      required: [name, memory, cores, DiskSize, os, subdomain]
      properties:
        name:
          type: string
        memory:
          type: integer
        cores:
          type: integer
        DiskSize:
          type: integer
        description:
          type: string
        os:
          type: string
          enum: [Ubuntu 22.04, Debian 12, CentOS 9, Windows Server 2022]
        subdomain:
          type: string

paths:
  /auth/login:
    post:
      summary: Inloggen
      description: Authenticeer een gebruiker en genereer een JWT token
      tags:
        - Authenticatie
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: Gebruikersnaam
                password:
                  type: string
                  description: Wachtwoord
              required:
                - username
                - password
      responses:
        "200":
          description: Succesvol ingelogd
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    description: JWT token voor authenticatie
        "401":
          description: Ongeldige inloggegevens

  /auth/resetRequest:
    post:
      summary: Wachtwoordreset aanvragen
      description: Vraag een wachtwoordreset aan
      tags:
        - Authenticatie
      responses:
        "200":
          description: Reset aanvraag succesvol verzonden

  /auth/resetPassword:
    post:
      summary: Wachtwoord resetten
      description: Voer een wachtwoordreset uit
      tags:
        - Authenticatie
      responses:
        "200":
          description: Wachtwoord succesvol gereset

  /api/get-user-info:
    get:
      summary: Gebruikersinformatie ophalen
      description: Haal de informatie op van de ingelogde gebruiker
      security:
        - bearerAuth: []
      tags:
        - Gebruikers
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
            description: JWT token in formaat `Bearer <token>`
      responses:
        "200":
          description: Gebruikersinformatie succesvol opgehaald
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserInfo"
        "401":
          description: Niet geautoriseerd

  /api/change-user-info:
    post:
      summary: Gebruikersinformatie wijzigen
      description: Wijzig de informatie van de ingelogde gebruiker
      security:
        - bearerAuth: []
      tags:
        - Gebruikers
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
            description: JWT token in formaat `Bearer <token>`
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserInfo"
      responses:
        "200":
          description: Gebruikersinformatie succesvol gewijzigd
        "400":
          description: Ongeldige invoer
        "401":
          description: Niet geautoriseerd
        "500":
          description: Serverfout bij wijzigen gebruiker

  /api/{hypervisor}/listallvms:
    get:
      summary: Alle virtuele machines ophalen
      description: Haal een lijst op van alle virtuele machines (alleen toegankelijk voor admins)
      security:
        - bearerAuth: []
      tags:
        - Virtuele Machines
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
            description: JWT token in formaat `Bearer <token>`
        - in: path
          name: hypervisor
          required: true
          schema:
            type: string
            enum: [proxmox, vmware, xen]
          description: Type hypervisor
      responses:
        "200":
          description: Lijst van alle virtuele machines succesvol opgehaald
          content:
            application/json:
              schema:
                type: object
                description: Lijst van VM's
        "401":
          description: Niet geautoriseerd
        "403":
          description: Geen admin rechten
        "400":
          description: Ongeldige hypervisor parameter
        "500":
          description: Serverfout bij ophalen VM's

  /api/{hypervisor}/listvmsuser:
    get:
      summary: Gebruiker's virtuele machines ophalen
      description: Haal een lijst op van alle virtuele machines van de ingelogde gebruiker
      security:
        - bearerAuth: []
      tags:
        - Virtuele Machines
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
            description: JWT token in formaat `Bearer <token>`
        - in: path
          name: hypervisor
          required: true
          schema:
            type: string
            enum: [proxmox, vmware, xen]
          description: Type hypervisor
      responses:
        "200":
          description: Lijst van virtuele machines succesvol opgehaald
          content:
            application/json:
              schema:
                type: object
                description: Lijst van VM's van gebruiker
        "401":
          description: Niet geautoriseerd
        "400":
          description: Ongeldige hypervisor parameter
        "500":
          description: Serverfout bij ophalen VM's

  /api/{hypervisor}/create-server:
    post:
      summary: Nieuwe server aanmaken
      description: Maak een nieuwe virtuele machine aan
      security:
        - bearerAuth: []
      tags:
        - Virtuele Machines
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
            description: JWT token in formaat `Bearer <token>`
        - in: path
          name: hypervisor
          required: true
          schema:
            type: string
            enum: [proxmox, vmware, xen]
          description: Type hypervisor
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateServerRequest"
      responses:
        "200":
          description: Server succesvol aangemaakt
        "400":
          description: Ongeldige invoer
        "401":
          description: Niet geautoriseerd
        "500":
          description: Serverfout bij aanmaken server

  /api/{hypervisor}/delete-server/{vmid}:
    post:
      summary: Server verwijderen
      description: Verwijder een virtuele machine
      security:
        - bearerAuth: []
      tags:
        - Virtuele Machines
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
            description: JWT token in formaat `Bearer <token>`
        - in: path
          name: hypervisor
          required: true
          schema:
            type: string
            enum: [proxmox, vmware, xen]
          description: Type hypervisor
        - in: path
          name: vmid
          required: true
          schema:
            type: integer
          description: ID van de virtuele machine om te verwijderen
      responses:
        "200":
          description: Server succesvol verwijderd
        "401":
          description: Niet geautoriseerd
        "403":
          description: Geen toegang tot deze VM
        "400":
          description: Ongeldige VM ID of hypervisor parameter
        "500":
          description: Serverfout bij verwijderen server
