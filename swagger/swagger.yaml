openapi: 3.0.3
info:
  title: CSC Self-Service Backend API
  version: 1.0.0
  description: |
    # CSC Self-Service Backend API

    ## Product & Doel
    Deze backend API is een selfservice platform voor HBO-ICT studenten om virtuele machines te beheren. Het primaire doel is om studenten praktijkervaring te laten opdoen met DevOps en infrastructuurbeheer, zonder afhankelijk te zijn van systeembeheerders.

    ## Doelgroep
    - HBO-ICT studenten in de afstudeerrichting Infrastructure
    - HBO-ICT studenten in de afstudeerrichting Software & Infrastructure
    - Studenten die praktijkervaring willen opdoen met cloud en virtualisatie technologieën

    ## HBO-i Eindkwalificaties
    - **Realiseren**: 
      - Ontwikkelen van API-functionaliteit voor infrastructuurbeheer
      - Implementeren van veilige authenticatie en autorisatie
      - Bouwen van schaalbare en onderhoudbare systemen
    - **Beheren**: 
      - Beheren van virtuele omgevingen via verschillende hypervisors
      - Monitoring en onderhoud van cloud infrastructuur
      - Implementeren van DevOps practices
    - **Adviseren**: 
      - Deze API stelt studenten in staat een infrastructuurontwerp te onderbouwen met werkende oplossingen
      - Evaluatie van verschillende virtualisatieplatformen
      - Beoordeling van infrastructuurvereisten

    ## Functionaliteit Overzicht
    1. **Authenticatie & Gebruikersbeheer**
       - Inloggen en JWT token generatie (/auth/login)
       - Wachtwoord reset functionaliteit (/auth/resetRequest, /auth/resetPassword)
       - Gebruikersprofiel beheer (/api/get-user-info, /api/change-user-info)

    2. **Virtuele Machine Beheer**
       - VM's aanmaken met verschillende configuraties (/api/{hypervisor}/create-server)
       - VM's bekijken per gebruiker (/api/{hypervisor}/listvmsuser)
       - VM's verwijderen (/api/{hypervisor}/delete-server/{vmid})
       - Admin: Alle VM's bekijken (/api/{hypervisor}/listallvms)

    ## Authenticatie
    Alle routes onder `/api/` vereisen authenticatie via een **Bearer-token** in de `Authorization` header. Verkrijg dit token via de `/auth/login` endpoint. Het formaat van de header moet zijn:
    
    ```
    Authorization: Bearer <JWT-token>
    ```

    ### Waarom JWT Tokens?
    JWT (JSON Web Token) tokens worden gebruikt om:
    1. Te verifiëren dat je bent ingelogd
    2. Je rechten te controleren (student vs admin)
    3. Je sessie veilig te beheren

    ### Hoe werkt het?
    1. Log in via `/auth/login` met je studentnummer en wachtwoord
    2. Je ontvangt een JWT token
    3. Gebruik dit token in de `Authorization` header voor alle andere API calls
    4. Het token is 72 uur geldig

    ### Voorbeeld
    ```bash
    # 1. Inloggen
    curl -X POST https://api.dev.ikwileenserver.open-ict.hu/auth/login \
      -d "username=12345678&password=jouw_wachtwoord"

    # 2. Token gebruiken voor API calls
    curl https://api.dev.ikwileenserver.open-ict.hu/api/get-user-info \
      -H "Authorization: Bearer <jouw_token>"
    ```

    ## Contact
    <div class="contact-info">
      <p>Voor ondersteuning of vragen:</p>
      <ul>
        <li>Email: <a href="mailto:timon@timonheidenreich.eu">Stuur een Email</a></li>
        <br><br>
        <li>Discord: <a href="https://discord.com/users/760123997475700756" target="_blank">Stuur een Bericht (Ik heb meldingen uitgeschakeld voor Discord)</a></li>
        <br><br>
        <li>Berichten: <a href="sms://timon@timonheidenreich.eu">Stuur een Bericht (alleen voor iOS gebruikers)</a></li>
      </ul>
    </div>
  contact:
    name: CSC Support Team

servers:
  - url: https://api.dev.ikwileenserver.open-ict.hu
    description: dev server

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Error:
      type: object
      properties:
        error:
          type: string
          description: Error message

    LoginRequest:
      type: object
      required: [username, password]
      properties:
        username:
          type: string
          description: Gebruikersnaam (studentnummer)
          pattern: '^[0-9]{8}$'
        password:
          type: string
          description: Wachtwoord
          minLength: 8
          maxLength: 128

    ResetRequest:
      type: object
      required: [email]
      properties:
        email:
          type: string
          description: Email adres van de gebruiker
          format: email

    ResetPasswordRequest:
      type: object
      required: [token, newPassword]
      properties:
        token:
          type: string
          description: Reset token ontvangen via email
        newPassword:
          type: string
          description: Nieuw wachtwoord
          minLength: 8
          maxLength: 128

    UserInfo:
      type: object
      properties:
        email:
          type: string
          description: Email adres van de gebruiker
          format: email
        student_id:
          type: integer
          description: Studentnummer
          minimum: 10000000
          maximum: 99999999
        home_ip:
          type: string
          description: IP adres van de gebruiker
          format: ipv4

    CreateServerRequest:
      type: object
      required: [name, memory, cores, DiskSize, os, subdomain]
      properties:
        name:
          type: string
          description: Naam van de virtuele machine (moet uniek zijn)
          minLength: 3
          maxLength: 63
          pattern: '^[a-zA-Z0-9-]+$'
        memory:
          type: integer
          description: Aantal MB geheugen voor de VM
          minimum: 512
          maximum: 16384
        cores:
          type: integer
          description: Aantal CPU cores voor de VM
          minimum: 1
          maximum: 8
        DiskSize:
          type: integer
          description: Grootte van de schijf in GB
          minimum: 10
          maximum: 500
        description:
          type: string
          description: Optionele beschrijving van de VM
          maxLength: 255
        os:
          type: string
          description: Besturingssysteem voor de VM
          enum: [Ubuntu 22.04, Debian 12, CentOS 9, Windows Server 2022]
        subdomain:
          type: string
          description: Subdomein voor de VM (moet uniek zijn)
          pattern: '^[a-z0-9-]+$'
          minLength: 3
          maxLength: 63

paths:
  /auth/login:
    post:
      summary: Inloggen
      description: |
        Authenticeer een gebruiker en genereer een JWT token.
        
        Validatie:
        - Gebruikersnaam moet een geldig studentnummer zijn
        - Wachtwoord moet correct zijn
      tags:
        - Authenticatie
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: Gebruikersnaam (studentnummer)
                password:
                  type: string
                  description: Wachtwoord
              required:
                - username
                - password
      responses:
        "200":
          description: Succesvol ingelogd
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    description: JWT token voor authenticatie
                  user:
                    type: object
                    properties:
                      name:
                        type: string
                        description: Volledige naam van de gebruiker
                      is_admin:
                        type: boolean
                        description: Of de gebruiker admin rechten heeft
        "401":
          description: Ongeldige inloggegevens
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: "Username or password incorrect"
        "500":
          description: Serverfout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: "Login failed"

  /auth/resetRequest:
    post:
      summary: Wachtwoordreset aanvragen
      description: Vraag een wachtwoordreset aan voor het geval dat je je wachtwoord vergeten bent.
      tags:
        - Authenticatie
      responses:
        "200":
          description: Reset aanvraag succesvol verzonden
        "400":
          description: Ongeldige invoer
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: "Invalid email format"
        "500":
          description: Serverfout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: "Failed to send reset email"

  /auth/resetPassword:
    post:
      summary: Wachtwoord resetten
      description: |
        Voer een wachtwoordreset uit met een geldig reset token.
        
        Validatie:
        - Token moet geldig en niet verlopen zijn
        - Token moet aan een geldig email adres gekoppeld zijn	
        - Wachtwoord moet minimaal 8 karakters lang zijn
        - Wachtwoord moet voldoen aan de LDAP wachtwoord vereisten
      tags:
        - Authenticatie
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                token:
                  type: string
                  description: Reset token ontvangen via email
                password:
                  type: string
                  description: Nieuw wachtwoord
                  minLength: 8
                  maxLength: 128
              required:
                - token
                - password
      responses:
        "200":
          description: Wachtwoord succesvol gereset
          content:
            text/plain:
              schema:
                type: string
              example: "Password has been reset"
        "400":
          description: Ongeldige invoer
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: "Invalid password format"
        "401":
          description: Niet geautoriseerd
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: "Token is invalid"
        "404":
          description: Gebruiker niet gevonden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: "No entries found for user with SID"
        "500":
          description: Serverfout bij wijzigen wachtwoord
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                ldapConnection:
                  value:
                    error: "Failed to connect to LDAP server"
                ldapSearch:
                  value:
                    error: "Failed to search LDAP server"
                ldapModify:
                  value:
                    error: "Failed to reset password in LDAP"

  /api/get-user-info:
    get:
      summary: Gebruikersinformatie ophalen
      description: Haal de informatie op van de ingelogde gebruiker
      security:
        - bearerAuth: []
      tags:
        - Gebruikers
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
            description: JWT token in formaat `Bearer <token>`
      responses:
        "200":
          description: Gebruikersinformatie succesvol opgehaald
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserInfo"
        "401":
          description: Niet geautoriseerd
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: "invalid JWT token"
        "500":
          description: Serverfout bij ophalen gebruiker
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: "Failed to get user data"

  /api/change-user-info:
    post:
      summary: Gebruikersinformatie wijzigen
      description: Wijzig de informatie van de ingelogde gebruiker
      security:
        - bearerAuth: []
      tags:
        - Gebruikers
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
            description: JWT token in formaat `Bearer <token>`
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserInfo"
      responses:
        "200":
          description: Gebruikersinformatie succesvol gewijzigd
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserInfo"
        "400":
          description: Ongeldige invoer
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                invalidEmail:
                  value:
                    error: "Invalid email value"
                invalidStudentId:
                  value:
                    error: "Invalid student_id value"
                invalidHomeIp:
                  value:
                    error: "Invalid home_ip value"
        "401":
          description: Niet geautoriseerd
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: "invalid JWT token"
        "500":
          description: Serverfout bij wijzigen gebruiker
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: "Failed to update user data"

  /api/{hypervisor}/listallvms:
    get:
      summary: Alle virtuele machines ophalen
      description: |
        Haal een lijst op van alle virtuele machines (alleen toegankelijk voor admins).
        
        Ondersteunde hypervisors:
        - proxmox
      security:
        - bearerAuth: []
      tags:
        - Virtuele Machines
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
            description: JWT token in formaat Bearer <token>
        - in: path
          name: hypervisor
          required: true
          schema:
            type: string
            enum: [proxmox]
          description: Type hypervisor
      responses:
        "200":
          description: Lijst van alle virtuele machines succesvol opgehaald
          content:
            application/json:
              schema:
                type: object
                description: Lijst van VM's
              example:
                [ {
                  cpu: 0,
                  cpus: 2,
                  diskread: 0,
                  diskwrite: 0,
                  maxmem: 2147483648,
                  mem: 1394941529,
                  name: 'testmax',
                  netin: 7812950065,
                  netout: 8714316,
                  node: '',
                  status: 'running',
                  vmid: 114
                }]
        "401":
          description: Niet geautoriseerd
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: "invalid JWT token"
        "403":
          description: Geen admin rechten
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: "You do not have permission to access this resource"
        "400":
          description: Ongeldige hypervisor parameter
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: "Unknown hypervisor: proxmox"
        "500":
          description: Serverfout bij ophalen VM's
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: "Failed to parse JSON"

  /api/{hypervisor}/listvmsuser:
    get:
      summary: Gebruiker's virtuele machines ophalen
      description: |
        Haal een lijst op van alle virtuele machines van de ingelogde gebruiker.
        
        Ondersteunde hypervisors:
        - proxmox
      security:
        - bearerAuth: []
      tags:
        - Virtuele Machines
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
            description: JWT token in formaat Bearer <token>
        - in: path
          name: hypervisor
          required: true
          schema:
            type: string
            enum: [proxmox]
          description: Type hypervisor
      responses:
        "200":
          description: Lijst van virtuele machines succesvol opgehaald
          content:
            application/json:
              schema:
                type: object
                description: Lijst van VM's van gebruiker
              example:
                cpu: 0,
                description: ''
                expiresAt: '2025-11-18 07:23:08'
                ip_address: ''
                maxcpu: 0
                maxmem: 2147483648
                mem: 0
                name: 'maxtest'
                selectedOs: ''
                status: 'stopped'
                subdomain: ''
                uptime: 0
                vmid: 126
        "401":
          description: Niet geautoriseerd
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: "invalid JWT token"
        "400":
          description: Ongeldige hypervisor parameter
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: "Unknown hypervisor: proxmox"
                field: "hypervisor"
                code: "VALIDATION_ERROR"
        "500":
          description: Serverfout bij ophalen VM's
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                dbConnection:
                  value:
                    error: "Database connection error"
                dbQuery:
                  value:
                    error: "DB query error"
                dbScan:
                  value:
                    error: "DB scan error"
                dbRows:
                  value:
                    error: "DB rows error"

  /api/{hypervisor}/create-server:
    post:
      summary: Nieuwe server aanmaken
      description: |
        Maak een nieuwe virtuele machine aan met de opgegeven configuratie.
        
        ### Validatie
        - **Naam**: Moet uniek zijn, 3-63 karakters, alleen letters, cijfers en streepjes
        - **Geheugen**: Tussen 512MB en 16GB
        - **CPU Cores**: Tussen 1 en 8 cores
        - **Schijfgrootte**: Tussen 10GB en 500GB
        - **Besturingssysteem**: Moet een van de ondersteunde systemen zijn
        - **Subdomein**: Moet uniek zijn, 3-63 karakters, alleen kleine letters, cijfers en streepjes

        ### Ondersteunde Besturingssystemen
        - Ubuntu 22.04
        - Debian 12
        - CentOS 9
        - Windows Server 2022
      security:
        - bearerAuth: []
      tags:
        - Virtuele Machines
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
            description: JWT token in formaat Bearer <token>
        - in: path
          name: hypervisor
          required: true
          schema:
            type: string
            enum: [proxmox]
          description: Type hypervisor
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateServerRequest"
            example:
              name: "mijn-vm"
              memory: 2048
              cores: 2
              DiskSize: 50
              description: "Mijn eerste VM"
              os: "Ubuntu 22.04"
              subdomain: "mijn-vm"
      responses:
        "200":
          description: Server succesvol aangemaakt
          content:
            application/json:
              schema:
                type: object
                properties:
                  vmid:
                    type: integer
                    description: ID van de aangemaakte VM
                  status:
                    type: string
                    description: Status van de VM
              example:
                vmid: 123
                status: "creating"
        "400":
          description: Ongeldige configuratie
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                invalidMemory:
                  value:
                    error: "Geheugen moet tussen 512MB en 16GB liggen"
                invalidOS:
                  value:
                    error: "Ongeldig besturingssysteem. Kies uit: Ubuntu 22.04, Debian 12, CentOS 9, Windows Server 2022"
        "401":
          description: Niet geautoriseerd
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: "Ongeldige of verlopen authenticatie token"
        "409":
          description: Conflict - naam of subdomein bestaat al
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: "VM naam of subdomein is al in gebruik"
        "500":
          description: Serverfout bij aanmaken server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: "Interne serverfout bij het aanmaken van de VM"

  /api/{hypervisor}/delete-server/{vmid}:
    post:
      summary: Server verwijderen
      description: Verwijder een virtuele machine
      security:
        - bearerAuth: []
      tags:
        - Virtuele Machines
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
            description: JWT token in formaat `Bearer <token>`
        - in: path
          name: hypervisor
          required: true
          schema:
            type: string
            enum: [proxmox]
          description: Type hypervisor
        - in: path
          name: vmid
          required: true
          schema:
            type: integer
          description: ID van de virtuele machine om te verwijderen
      responses:
        "200":
          description: Server succesvol verwijderd
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: Status van de verwijdering
              example:
                status: "deleted"
        "400":
          description: Ongeldige VM ID of hypervisor parameter
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: "Invalid VM ID"
        "401":
          description: Niet geautoriseerd
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: "invalid JWT token"
        "403":
          description: Geen toegang tot deze VM
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: "You do not have permission to delete this VM"
        "404":
          description: VM niet gevonden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: "VM not found"
        "500":
          description: Serverfout bij verwijderen server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: "Failed to delete VM"
