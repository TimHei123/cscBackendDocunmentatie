openapi: 3.0.3
info:
  title: CSC Self-Service Backend API
  version: 1.0.0
  description: |
    # CSC Self-Service Backend API

    Deze backend API ondersteunt selfservice voor studenten om virtuele machines aan te maken, beheren en verwijderen, evenals het bijwerken van gebruikersprofielen.

    ## Productomschrijving
    Deze API is ontwikkeld voor HBO-ICT studenten die zelfstandig virtuele machines willen beheren via bijvoorbeeld Proxmox of VMware. Het doel is om DevOps-principes te leren zonder afhankelijk te zijn van systeembeheerders.

    ## Doelgroep
    HBO-ICT studenten, met name in de afstudeerrichting Infrastructure of Software & Infrastructure.

    ## HBO-i Eindkwalificaties
    - **Realiseren**: Ontwikkelen van API-functionaliteit om infrastructuur te beheren.
    - **Beheren**: Beheren van virtuele omgevingen.
    - **Adviseren**: Deze API stelt studenten in staat een infrastructuurontwerp te onderbouwen met werkende oplossingen.

     ## Contact
    <div class="contact-info">
      <p>Voor ondersteuning of vragen:</p>
      <ul>
        <li>Email: <a href="mailto:timon@timonheidenreich.eu">Stuur een Email</a></li>
        <br><br>
        <li>Discord: <a href="https://discord.com/users/760123997475700756" target="_blank">Stuur een Bericht (Ik heb meldingen uitgeschakeld voor Discord)</a></li>
        <br><br>
        <li>Berichten: <a href="sms://timon@timonheidenreich.eu">Stuur een Bericht (alleen voor iOS gebruikers)</a></li>
      </ul>
    </div>
  contact:
    name: CSC Support Team

servers:
  - url: https://api.dev.ikwileenserver.open-ict.hu
    description: dev server

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Error:
      type: object
      properties:
        error:
          type: string
          description: Error message

    LoginRequest:
      type: object
      required: [username, password]
      properties:
        username:
          type: string
        password:
          type: string

    ResetRequest:
      type: object
      required: [email]
      properties:
        email:
          type: string

    ResetPasswordRequest:
      type: object
      required: [token, newPassword]
      properties:
        token:
          type: string
        newPassword:
          type: string

    UserInfo:
      type: object
      properties:
        email:
          type: string
        student_id:
          type: integer
        home_ip:
          type: string

    CreateServerRequest:
      type: object
      required: [name, memory, cores, DiskSize, os, subdomain]
      properties:
        name:
          type: string
        memory:
          type: integer
        cores:
          type: integer
        DiskSize:
          type: integer
        description:
          type: string
        os:
          type: string
          enum: [Ubuntu 22.04, Debian 12, CentOS 9, Windows Server 2022]
        subdomain:
          type: string

paths:
  /auth/login:
    post:
      summary: Inloggen
      description: Autenticeer de gebruiker en ontvang een JWT-token.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: Login successful
        '400':
          description: Invalid login request
        '401':
          description: Unauthorized – incorrect credentials
        '500':
          description: Internal server error

  /auth/resetRequest:
    post:
      summary: Wachtwoord reset aanvragen
      description: Stuurt een reset-link naar het opgegeven e-mailadres.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetRequest'
      responses:
        '200':
          description: Reset request accepted
        '500':
          description: Internal server error

  /auth/resetPassword:
    post:
      summary: Wachtwoord reset uitvoeren
      description: Wachtwoord resetten met een geldig token.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetPasswordRequest'
      responses:
        '200':
          description: Password reset successful
        '400':
          description: Invalid or expired token

  /api/change-user-info:
    post:
      summary: Gebruikersinfo bijwerken
      description: Werk gegevens zoals e-mail, studentnummer en IP-adres bij.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserInfo'
      responses:
        '200':
          description: User info updated
        '400':
          description: Invalid input
        '401':
          description: Unauthorized
        '500':
          description: Internal server error

  /api/get-user-info:
    get:
      summary: Gebruikersinfo ophalen
      description: Haal profielinformatie van de ingelogde gebruiker op.
      security:
        - bearerAuth: []
      responses:
        '200':
          description: User info retrieved
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '500':
          description: Internal server error

  /api/{hypervisor}/listallvms:
    get:
      summary: Alle VMs ophalen (admin)
      description: Alleen beschikbaar voor beheerders.
      security:
        - bearerAuth: []
      parameters:
        - name: hypervisor
          in: path
          required: true
          schema:
            type: string
            enum: [proxmox]
      responses:
        '200':
          description: All VMs listed
        '400':
          description: Invalid hypervisor
        '401':
          description: Unauthorized
        '403':
          description: Forbidden – admin only
        '500':
          description: Internal server error

  /api/{hypervisor}/listvmsuser:
    get:
      summary: VMs van gebruiker ophalen
      description: Geeft de VMs terug die toebehoren aan de ingelogde gebruiker.
      security:
        - bearerAuth: []
      parameters:
        - name: hypervisor
          in: path
          required: true
          schema:
            type: string
            enum: [proxmox]
      responses:
        '200':
          description: User VMs listed
        '400':
          description: Invalid hypervisor
        '401':
          description: Unauthorized
        '500':
          description: Internal server error

  /api/{hypervisor}/create-server:
    post:
      summary: VM aanmaken
      description: Creëer een nieuwe virtuele machine.
      security:
        - bearerAuth: []
      parameters:
        - name: hypervisor
          in: path
          required: true
          schema:
            type: string
            enum: [proxmox]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateServerRequest'
      responses:
        '200':
          description: VM created successfully
        '400':
          description: Invalid request
        '401':
          description: Unauthorized
        '500':
          description: Internal server error

  /api/{hypervisor}/delete-server/{vmid}:
    post:
      summary: VM verwijderen
      description: Verwijdert een virtuele machine op basis van ID.
      security:
        - bearerAuth: []
      parameters:
        - name: hypervisor
          in: path
          required: true
          schema:
            type: string
            enum: [proxmox]
        - name: vmid
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: VM deleted successfully
        '400':
          description: Invalid request
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
