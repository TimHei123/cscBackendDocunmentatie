worker_processes 1;

events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    upstream swaggerui {
        server swagger-ui:8080;
    }

    server {
        listen 80;
        server_name timonheidenreich.nl;

        # Swagger UI location
        location /csc-self-servics/api-docs/ {
            proxy_pass http://swaggerui/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;
            proxy_read_timeout 300;
            proxy_connect_timeout 300;

            # Fix CORS issues
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
            add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
        }

        location = /csc-self-servics/api-docs/swagger.yaml {
            proxy_pass http://swaggerui/api/swagger.yaml;
            add_header Content-Type "application/yaml";
            add_header 'Access-Control-Allow-Origin' '*' always;
        }

        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
            try_files $uri =404;
        }

        # Redirect all other traffic to https
        location / {
            return 301 https://$host$request_uri;
        }
    }

    server {
        listen 443 ssl;
        server_name timonheidenreich.nl;

        ssl_certificate /etc/letsencrypt/live/timonheidenreich.nl/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/timonheidenreich.nl/privkey.pem;

        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers HIGH:!aNULL:!MD5;

        # Swagger UI location
        location /csc-self-servics/api-docs/ {
            proxy_pass http://swaggerui/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;
            proxy_read_timeout 300;
            proxy_connect_timeout 300;

            # Fix CORS issues
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
            add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
        }

        location = /csc-self-servics/api-docs/swagger.yaml {
            proxy_pass http://swaggerui/api/swagger.yaml;
            add_header Content-Type "application/yaml";
            add_header 'Access-Control-Allow-Origin' '*' always;
        }

        # Optional: root location redirect to swagger
        location / {
            return 301 /csc-self-servics/api-docs/;
        }
    }
}
